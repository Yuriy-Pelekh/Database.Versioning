version: 1.0.38.{build}
image:
- Visual Studio 2022
- Ubuntu2204
configuration: Release
platform: Any CPU
init:
- pwsh: >-
    if ($env:APPVEYOR_REPO_BRANCH -ne $env:DEFAULT_BRANCH) {
      Update-AppveyorBuild -Version $env:APPVEYOR_BUILD_VERSION-$env:APPVEYOR_REPO_BRANCH
    } elseif ($env:APPVEYOR_PULL_REQUEST_NUMBER -ne $null) {
      Update-AppveyorBuild -Version $env:APPVEYOR_BUILD_VERSION-((Get-Date).ToString("yyyyMMdd"))
    } 
for:
-
  matrix:
    except:
      - image: Ubuntu2204
  install:
    - choco install opencover.portable
    - choco install codecov
  test_script: 
    - ps: dotnet test .\src\Tests\Database.Versioning.Tests\ --configuration $env:CONFIGURATION --no-restore --no-build --logger:trx
    - OpenCover.Console.exe -register:user -target:"C:/Program Files/dotnet/dotnet.exe" -targetargs:"test src --configuration %configuration% --no-restore --no-build --logger:trx" -filter:"+[*]* -[*.Tests*]*" -oldStyle -output:"TestCoverage.xml"
    - ps: . "C:\ProgramData\chocolatey\lib\codecov\tools\codecov.exe" -f "TestCoverage.xml"
-
  matrix:
    only:
      - image: Ubuntu2204
  test_script: 
    - ps: dotnet test .\src\Tests\Database.Versioning.Tests\ --configuration $env:CONFIGURATION --no-restore --no-build --logger:trx
dotnet_csproj:
  patch: true
  file: '**\*.csproj'
  version: '{version}'
  version_prefix: '{version}'
  package_version: '{version}'
  assembly_version: '{version}'
  file_version: '{version}'
  informational_version: '{version}'
environment:
  DEFAULT_BRANCH: master
before_build:
- ps: dotnet restore .\src\Database.Versioning.sln
build_script:
- ps: dotnet build .\src\Database.Versioning.sln --configuration $env:CONFIGURATION --no-restore /p:DebugType=Full
after_build:
- ps: |
    if ($env:APPVEYOR_REPO_BRANCH -eq $env:DEFAULT_BRANCH) {
      dotnet pack .\src\Database.Versioning.sln --configuration $env:CONFIGURATION --no-restore --no-build /p:Version=$env:APPVEYOR_BUILD_VERSION 
    }
after_test:
- ps: |
    Write-Host "Uploading test results"
    $uploadPath = "https://ci.appveyor.com/api/testresults/mstest/$($env:APPVEYOR_JOB_ID)"
    $testResults = Resolve-Path .\src\Tests\*.Tests\TestResults\*.trx
    Write-Host "Sending $testResults to $uploadPath"
    $wc = New-Object 'System.Net.WebClient'
    Foreach ($testResult in $testResults)
    {
        $wc.UploadFile($uploadPath, $testResult)
    }
artifacts:
- path: src\Database.Versioning\bin\**\*.nupkg
  name: NuGet
- path: src\Database.Versioning\bin\**\*
  name: zip
deploy:
- provider: NuGet
  on:
    branch: master
  api_key:
    secure: QBVxWj0D8WxUS6/x0rNlx9K8nswZfOdC265Zwzv3VMCPGaVDUzKfkO11bHnfmkoI
  skip_symbols: true
